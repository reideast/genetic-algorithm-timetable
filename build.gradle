import org.yaml.snakeyaml.Yaml

buildscript {
    dependencies {
        // https://mvnrepository.com/artifact/org.yaml/snakeyaml
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.23'
    }
}

plugins {
    id 'java'
    id 'war' // TODO: test this: May not be needed because tomcat plugin uses WAR
}

group 'net.andreweast'
version '0.2.1'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    implementation 'org.postgresql:postgresql:42.2.5'
    
    // "providedCompile and providedRuntime, analogous to compile and runtime in regular Java applications, to represent dependencies that are needed locally but should not be added to the generated webdemo.war file." https://guides.gradle.org/building-java-web-applications/
}

//// For all of Gretty's appRun-type tasks, load the .ebextensions YAML file as environmental variables first
//tasks.withType(org.akhikhl.gretty.AppStartTask) { Task task ->
//    if (task.name in ['appRun', 'appStart', 'appRunWar', 'appStartWar']) {
//        def yamlFileContents = (".ebextensions/environmentvariables.config" as File).text
//        def envs = new Yaml().load(yamlFileContents)["option_settings"]["aws:elasticbeanstalk:application:environment"] as Map<String, String>
//        envs.each { key, value ->
//            systemProperty key, value // Gradle's idiom for System.setProperty()
//        }
//    }
//}

war {
    // bundle Elastic Beanstalk config files into the WAR
    from('.ebextensions') {
        include 'environmentvariables.config'
        include 'securitygroup-addexisting.config'
        into('.ebextensions')
    }
    inputs.files('.ebextensions') // Informs the WAR task that files in this directory should be considered inputs, thus the WAR must be rebuilt if they are modified
}
