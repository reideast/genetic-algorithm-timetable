plugins {
    id 'java'
    id 'groovy'
    id 'war' // TODO: test this: May not be needed because tomcat plugin uses WAR
    id "com.bmuschko.tomcat" version "2.5"
}

//apply plugin: 'com.bmuschko.tomcat'

group 'net.andreweast'
version '0.2.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.13'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    def tomcatVersion = '8.5.16'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
        "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

sourceSets {
    main {
        java {
            // https://stackoverflow.com/a/22164339/5271224
            srcDirs = []
//            srcDirs += ['src/main/groovy']
        }
        groovy {
            // do a co-compilation of java and groovy, so that they can depend on each other without circular dependencies
            // https://stackoverflow.com/a/22164339/5271224
            srcDirs += ['src/main/java']
//            srcDirs = []
        }
    }
}
// remove GroovyCompile->JavaCompile task dependencies
//// https://stackoverflow.com/a/22164339/5271224
//tasks.withType(GroovyCompile) {
//    dependsOn = []
//}
//// add JavaCompile->GroovyCompile task dependencies
//// https://stackoverflow.com/a/22164339/5271224
//tasks.withType(JavaCompile) { task ->
//    println "Task: ${task}"
//    println task.name.replace("Java", "Groovy")
//    dependsOn task.name.replace("Java", "Groovy")
//}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
    contextPath = '/' // Otherwise, would run on localhost:8080/projectName/
    users {
        user {
            username = 'user1'
            password = '123456'
            roles = ['developers', 'admin']
        }

        user {
            username = 'user2'
            password = 'abcdef'
            roles = ['manager']
        }
    }
}
tomcatRun {
    daemon = false // TODO: turn to true if using tomcatStop
    outputFile = file('logs/tomcat-log.log')
}
